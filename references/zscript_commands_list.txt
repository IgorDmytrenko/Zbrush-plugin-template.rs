// COPYRIGHT PIXOLOGIC

[Assert,True Or False Evaluation,Message that will be shown if the first input is false (zero)]
(ZScript debugging helper) aborts execution if specified condition is not true

[BackColorSet,Red,Green,Blue]
Sets the pen background color

[ButtonFind,Interface item path,Button Text,Initially Disabled? (0=Enabled(ByDefault) NonZero=Disabled)]
Locates a ZBrush interface item

[ButtonPress,Interface item path,Button Text,Initially Disabled? (0=Enabled(ByDefault) NonZero=Disabled)]
Locates and presses a ZBrush interface item

[ButtonSet,Interface item path,Value,Button Text,Initially Disabled? (0=Enabled(ByDefault) NonZero=Disabled)]
Locates and sets a new value to a ZBrush interface item

[ButtonUnPress,Interface item path,Button Text,Initially Disabled? (0=Enabled(ByDefault) NonZero=Disabled)]
Locates and unpresses a ZBrush interface item

[CanvasClick,X1,Y1,X2,Y2,X3,Y3,X4,Y4,X5,Y5,X6,Y6,X7,Y7,X8,Y8]
Emulates a click within the current canvas area

[CanvasGyroHide]
Hides the Transformation Gyro

[CanvasGyroShow]
Shows the Transformation Gyro

[CanvasPanGetH]
Returns the H pan value of the active document view
Output: The current H Pan value.

[CanvasPanGetV]
Returns the V pan value of the active document view
Output: The current V Pan value.

[CanvasPanSet,H value (0=left of document),V value (0=top of document)]
Pans (Scrolls) the active document view

[CanvasStroke,StrokeData,Delayed update until end of stroke,Rotation,HScale,VScale,HOffset,VOffset]
Emulates a brush stroke within the current canvas area

[CanvasStrokes,StrokesData,Delayed update until end of stroke,Rotation,HScale,VScale,HOffset,VOffset,HRotateCenter,VRotateCenter]
Emulates multiple brush strokes within the current canvas area

[CanvasZoomGet]
Returns the zoom value of the active document view
Output: The current zoom value.

[CanvasZoomSet,Zoom factor]
Sets the zoom factor of the active document view

[Caption,Text]
Displays a text line using the current Caption settings

[CreateDirectory,Folder path.]
Create a new directory.
Output: Returns zero if command executed successfully.

[CurveAddPoint,Curve Index (zero based),x position,y position,z position]
Add a new point to the specified curve
Output: Returns the point index (zero based) or -1 if failed.

[CurvesCreateMesh,Name,Action 0(default)=Append mesh to the active mesh, 1=Add as a new subtool, 2=Export OBJ file if does not exists, 3=Export Obj file and overwrite if exsits,Thickness (zero = single side mesh)]
Creates a mesh from the current curves
Output: Returns the number of points in the new mesh. zero=error, -1=file exists

[CurvesDelete]
Deletes named curves list.

[CurvesNewCurve]
Creates a new curve in the current curves list.
Output: Returns the curve index (zero based) or -1 if failed.

[CurvesNew]
Creates a new curves list.

[CurvesToUI]
Copy the ZScript curves to UI
Output: Returns zero of OK or -1 if failed.

[Delay,Delay (in seconds)]
Delays execution of ZScript for specified amount of time

[DispMapCreate,Image Width,Image Height,Smooth (default=yes),SubPoly (default=0),Border (default=8),UVTile index (default=ignores UV tiles),Use HD if available (default=1)]
Creates DisplacementMap
Output: Returns zero if executed successfully. Any other value indicates an error

[Exit]
Aborts execution and exits the current ZScript

[FileDelete,File name including the extension (such as brush1.ztl ).]
Delete specific file.
Output: Returns zero if command executed successfully.

[FileExecute,File name including the extension (such as plugin.dll ).,Routine to call.,Optional text input.,Optional number input.,Optional memory block input.,Optional memory block output.]
Executes the specified plugin file (DLL).
Output: Returns the result value which was returned by the executed routine. Returns zero if error

[FileExists,File name including the extension (such as brush1.ztl ).]
Check if a specific file exists.
Output: Returns 1 if file exists. Returns zero if does not exists

[FileGetInfo,File name including the extension (such as brush1.ztl ).,The information requested index.]
Retrieve information about a specified file.
Output: Returns the requested information or zero if file not found.

[FileNameAdvance,base file name,Number of digits (0-4) (i.e. 3= 001 ),Add 'Copy' string? (0=no, NonZero=yes)]
Increments the index value contained within a filename string  
Output: Updated file Name

[FileNameAsk,Extention list (up to 3 extentions),Default fileName for SaveDialog. Name should be omitted for OpenDialog,Optional dialog title.]
Asks user for a file name
Output: Result file name or an empty string if user canceled operation.

[FileNameExtract,File name (Full path),Component specifier (1=path, 2=name, 4=ext)]
Extracts filename components.
Output: The extracted filename component/s.

[FileNameGetLastTyped]
Retrieves the latest file name that was typed by the user in a Save/Load action
Output: Latest file name that was typed by the user. Returned Variable will be empty if the user has canceled the action.

[FileNameGetLastUsed]
Retrieves the latest file name that was used (by the user or by ZBrush) in a Save/Load action
Output: Latest file name that was used. Returned Variable will be empty if the user has canceled the action.

[FileNameGetNext]
Get the preset file name that will be used in the next Save/Load action, if it has been preset
Output: File name that will be used in the next Save/Load action. Returned Variable will be empty if no next file name is preset.

[FileNameHasNext]
Test if the preset file name that will be used in the next Save/Load action have been set or not
Output: Returns 1 if next file name has been set, 0 otherwise.

[FileNameMake,Base file name,Index,Number of numeric digits to use]
Combines a base filename with an index number
Output: Combined file name Variable

[FileNameResolvePath,Local File Name]
Resolves local path to full path
Output: Full path.

[FileNameSetNext,File name including the extension (such as .psd ). If omitted the stored file name will be cleared.,Optional Import/Export tamplate path. If omitted, the current tamplate will be used.]
Pre-sets the file name that will be used in the next Save/Load action

[FileTemplateGetNext]
Get the preset template file name that will be used in the next Save/Load action, if it has been preset
Output: Template file name that will be used in the next Save/Load action. Returned Variable will be empty if no next template file name is preset.

[FontSetColor,Red,Green,Blue]
Sets the color of the text-flow font

[FontSetOpacity,Opacity]
Sets the opacity of the text-flow font

[FontSetSize,Size: 1=Small 2=Med 3=Large]
Sets the intensity of the text-flow font

[FontSetSizeLarge]
Sets the size of the text-flow font to large

[FontSetSizeMedium]
Sets the size of the text-flow font to medium

[FontSetSizeSmall]
Sets the size of the text-flow font to small

[FrontColorSet,Description Text,Red,Green,Blue,Initially Disabled? (0=Enabled(ByDefault) NonZero=Disabled)]
Sets the main interface color to a new value

[GetActiveToolPath]
Returns the full path of the active tool
Output: The path of the active tool

[GetPolyMesh3DArea]
Get the area of current PolyMesh3D SubTool
Output: Returns the Area of current PolyMesh3D SubTool, or 0 if not a PolyMesh3D.

[GetPolyMesh3DVolume]
Get the volume of current PolyMesh3D SubTool
Output: Returns the Volume of current PolyMesh3D SubTool, or 0 if not a PolyMesh3D. Note: if PolyMesh3D is NOT a valid volume, then resulting value may be not accurate.

[HotKeyText,Interface item path]
Displays a hot-key for the specified interface item

[IButton,Button Text,Popup info Text,Commands group to execute when button is pressed,Initially Disabled? (0=Enabled(ByDefault) NonZero=Disabled),Button width in pixels (0=AutoWidth NonZero=Specified width),Optional hotkey,Optional button icon (.psd .bmp  ),Button height in pixels (0=AutoHeight NonZero=Specified height)]
Creates an interactive push button

[IClick,Interface item path,X1,Y1,X2,Y2,X3,Y3,X4,Y4,X5,Y5,X6,Y6,X7,Y7]
Emulates a click within a specified ZBrush interface item

[IClose,Interface item path,Show Zoom Rectangles?,Target parent window?]
Closes an interface item.

[IColorSet,Red (0-255),Green (0-255),Blue (0-255)]
Sets the active color to a new value

[IConfig,ZBrush version-configuration (1.232=v1.23b, 1.5=v1.5 and newer.) ]
Sets ZBrush internal version-configuration

[IDialog,Dialog title,Title mode? (0=Show Title and minimize button(ByDefault) 1=Show Title without minimize button 2=Hide Title ),Optional subpalette gray-scale (8-bits) icon (Standrad size of 20x20 pixels),Left Inset (0=default),Right Inset (0=default),Left Top (0=default),Right Bottom (0=default)]
Adds a subpalette to ZBrush interface.
Output: Returns 1 if subpalette added succesfuly. Returns 0 if subpalette could not be added or if it already exsists.

[IDisable,Window path,Window ID or relative windowID(-100<->100)]
Disables a ZScript interface item (can only be used for ZScript-generated interface items)

[IEnable,Window path,Window ID or relative windowID(-100<->100)]
Enables a ZScript interface item (can only be used for ZScript-generated interface items)

[IExists,Interface item path]
Verifies that a specified interface item exists.
Output: 1 if item exists,0 otherwise

[If,True Or False Evaluation,Commands group to be executed if true  (not zero),Commands group to be executed if false (is  zero)]
Provides conditional execution of a commands group

[IFadeIn,Fade out speed in secs. (default=.5 secs) ]
Fades ZBrush window to black.

[IFadeOut,Fade out speed in secs. (default=.5 secs) ]
Fades ZBrush window to black.

[IFreeze,Commands group to be executed without updating the interface,Fade out speed in secs. (default=.5 secs) ]
Disables interface updates.

[IGet,Interface item path]
Returns the current value of a ZBrush or ZScript interface item
Output: The item value

[IGetFlags,Interface item path]
Returns the status flags of the specified interface item
Output: The flags

[IGetHotkey,Interface item path]
Returns the hotkey of the specified interface item
Output: The Hotkey

[IGetID,Interface item path]
Returns the window ID code of the specified interface item
Output: The Title

[IGetInfo,Interface item path]
Returns the info (popup info) of the specified interface item
Output: The info

[IGetMax,Interface item path]
Returns the maximum possible value of a ZBrush or ZScript interface item
Output: The item maximum value

[IGetMin,Interface item path]
Returns the minimum possible value of a ZBrush or ZScript interface item
Output: The item minimum value

[IGetSecondary,Interface item path]
Returns the the scondary value of a 2D interface item
Output: The item value

[IGetStatus,Interface item path]
Returns the Enabled/Disabled status of a ZBrush or ZScript interface item
Output: The item status
  0=Disabled
  1=Enabled

[IGetTitle,Interface item path,Return full path? (0=no nonZero=yes)]
Returns the title of the specified interface item
Output: The Title of the button

[IHeight,Interface item path]
Returns the pixel-height of an interface item.
Output: The height of the interface item.

[IHide,Interface item path,Show Zoom Rectangles?,Target parent window?]
Hides an interface item.

[IHPos,Interface item path,Global coordinates? set value to non-zero for global coordinates, default=Canvas coordinates.]
Returns the H position of the interface item in Canvas or Global coordinates.
Output: The H position of the interface item.

[IKeyPress,The key to press with an optional CTRL/CMD, ALT/OPT, SHIFT or TAB combination. ,Commands group to execute while the key is pressed,Optional H cursor position prior to key press,Optional V cursor position prior to key press]
Simulates a key press

[ILock,Window path,Window ID or relative windowID(-100<->100)]
Locks an interface item 

[Image,FileName (.psd .bmp  ),Align (0=center 1=left 2=right),Resized Width]
Loads and displays an image

[IMaximize,Interface item path,Maximizeall sub palettes? (0=no, NonZero=yes)]
Locates an interface item and (if possible) maximize its size.

[IMinimize,Interface item path,Minimize all sub palettes? (0=no, NonZero=yes)]
Locates an interface item and (if possible) minimize its size.

[IModGet,Interface item path]
Returns the current modifiers binary state of a ZBrush or ZScript interface item
Output: The item value

[IModify,Interface item path,Button width in pixels (0=Unchanged),Button height in pixels (0=Unchanged),Optional button icon (Grayscale.psd) ("DeleteIcon"=Deletes existing icon if any)]
Modify a ZBrush interface item 

[IModSet,Interface item path,value]
Sets the modifiers binary value of a ZBrush or a ZScript interface item

[Interpolate,Time (0=AtStart 0.5=half 1=AtEnd)	,Value1 (Num, VarName or ListName),Value2 (Num, VarName or ListName),Value3 (Num, VarName or ListName),Value4 (Num, VarName or ListName),Angle interpolation (0=no(default), 1=yes )]
Performs time-based interpolation
Output: Interpolated value or list

[IPalette,Palette name,Docking bar? (0=Left Menu Bar(ByDefault) 1=Right Menu Bar ),Key ShortCut]
Adds a new palette to ZBrush interface.
Output: Returns 1 if palette added succesfuly. Returns 0 if palette could not be added or if it already exsists.

[IPress,Interface item path]
Presses a ZBrush or ZScript interface item

[IReset,Optional item to reset (default=All). 0=All,1=Interface,2=Document,3=Tools,4=Lights,5=Materials,6=Stencil,Optional ZBrush version-configuration (default=1.5. if omitted, configuration will default to version 1.23b )]
Interface Reset
Output: Returns the button that the user clicked. ( 0=NO, 1=YES )

[IsDisabled,Interface item path]
Returns 1 if the specified ZBrush or ZScript interface item is currently disabled, returns 0 otherwise
Output: The item 'Disabled' status (1=Disabled 0=Enabled)

[IsEnabled,Interface item path]
Returns 1 if the specified ZBrush or ZScript interface item is currently enabled, returns 0 otherwise
Output: The item 'Enabled' status (1=Enabled 0=Disabled)

[ISet,Interface item path,value,Secondary value]
Sets a new value to a ZBrush or ZScript interface item

[ISetHotkey,Interface item path,Hotkey  (0=no Hotkey)]
Sets the hotkey of the specified interface item

[ISetMax,Interface item path,New max value ]
Sets the maximum value for an ISlider interface item (can only be used for ZScript-generated interface items)

[ISetMin,Interface item path,New min value ]
Sets the minimum value for an ISlider interface item (can only be used for ZScript-generated interface items)

[ISetStatus,Interface item path,New status ( 0=Disable NotZero=Enable )]
Enables or Disables a ZScript interface item (can only be used for ZScript-generated interface items)

[IShowActions,The ShowActions status. 0=Disable ShowActions, Positive value=enable show actions, Negative value=Reset ShowActions ]
Temorarily sets the status of ShowActions

[IShow,Interface item path,Show Zoom Rectangles?,Target parent window?]
Locates an interface item and makes it visible.

[ISlider,Slider Text,CurValue,Resolution,MinValue,MaxValue,Popup info Text,Commands group to execute when value is changed,Initially Disabled? (0=Enabled(ByDefault) NonZero=Disabled),Button width in pixels (0=AutoWidth NonZero=Specified width),Button height in pixels (0=AutoHeight NonZero=Specified height)]
Creates an interactive slider

[IsLocked,Interface item path]
Returns 1 if the specified ZBrush or ZScript interface item is currently locked, returns 0 otherwise
Output: The item 'Locked' status (1=Locked 0=Unlocked)

[IsPolyMesh3DSolid]
Tests if current PolyMesh3D is a Solid
Output: Returns 1 if current PolyMesh3D is a valid Solid, 0 otherwise.

[IStroke,Interface item path,StrokeData]
Emulates a brush stroke within an interface item

[ISubPalette,Subpalette name,Title mode? (0=Show Title and minimize button(ByDefault) 1=Show Title without minimize button 2=Hide Title ),Optional subpalette gray-scale (8-bits) icon (Standrad size of 20x20 pixels),Left Inset (0=default),Right Inset (0=default),Left Top (0=default),Right Bottom (0=default)]
Adds a subpalette to ZBrush interface.
Output: Returns 1 if subpalette added succesfuly. Returns 0 if subpalette could not be added or if it already exsists.

[IsUnlocked,Interface item path]
Returns 1 if the specified ZBrush or ZScript interface item is currently unlocked, returns 0 otherwise
Output: The item 'Unlocked' status (1=Unlocked 0=locked)

[ISwitch,Button Text,Initial state (1=pressed,0=unpressed),Popup info Text,Commands group to execute when button is pressed,Commands group to execute when button is unpressed,Initially Disabled? (0=Enabled(ByDefault) NonZero=Disabled),Button width in pixels (0=AutoWidth NonZero=Specified width),Button height in pixels (0=AutoHeight NonZero=Specified height),Optional button icon (.psd .bmp  )]
Creates an interactive switch

[IToggle,Interface item path]
Toggles the state of a ZBrush or ZScript interface item

[IUnlock,Window path,Window ID or relative windowID(-100<->100)]
Unlocks an interface item

[IUnPress,Interface item path]
Unpresses a ZBrush or ZScript interface item

[IUpdate,Repeat count (default=1),Redraw UI? (default==no, 1=yes)]
Updates the ZBrush interface.

[IVPos,Interface item path,Global coordinates? set value to non-zero for global coordinates, default=Canvas coordinates.]
Returns the V position of the interface item in Canvas or Global coordinates.
Output: The V position of the interface item.

[IWidth,Interface item path]
Returns the pixel-width of an interface item.
Output: The width of the interface item.

[Loop,RepeatCount,Commands group,Optional loop-counter variable (starts at Zero)]
Repeats execution of the specified commands group

[LoopContinue]
Continues execution from the beginning of the current Loop

[LoopExit]
Exits the current Loop

[MemCopy,From Mem block identifier.,From offset,To Mem block identifier.,To offset,Number of bytes to move. (If omited, max possible number of bytes will be copied)]
Copies data from one memory block into another.
Output: Returns the mumber of bytes moved. (-1 indicates an error)

[MemCreate,Mem block identifier.,Mem block requested size.,Initial fill? (omited=noFill=faster to create)]
Creates a new memory block.
Output: Returns the size of the new memory block or error code...0=Error -1=Memory already exists -2=Can't create memory block.

[MemCreateFromFile,Mem block identifier.,File name including the extension (such as brush1.ztl ).,Optional start file offset for partial file read. (Default=0),Optional max bytes to read. (Default=all file)]
Creates a new memory block from a disk file.
Output: Returns the size of the new memory block or error code...0=Error -1=Memory already exists -2=Can't create memory block -3=File not found.

[MemDelete,Data block identifier.]
Deletes a memory block.
Output: Returns the size of the deleted memory block. Returns 0 if memory block could not be found.

[MemGetSize,Memory block identifier.]
Returns the size of a memory block (Also useful for determining if a memory block already exists
Output: Returns the size of the memory block. Returns 0 if data block could not be found.

[MemMove,Mem block identifier.,From offset,To offset,Number of bytes to move]
Move data within an existing memory block.
Output: Returns the mumber of bytes moved.

[MemMultiWrite,Mem block identifier.,Value to write.,Data format (0=omited=float, 1=signed char,2=unsigned char,3=signed short,4=unsigned short,5=signed long,6=unsigned long,7=fixed16 (16.16),Offset (in bytes) into memory block.,Repeat count,Offset (in bytes) to subsequent writes]
Write data to a memory block.
Output: Returns the number of actual bytes written

[MemRead,Mem block identifier.,Read variable.,Data format (0=omited=float, 1=signed char,2=unsigned char,3=signed short,4=unsigned short,5=signed long,6=unsigned long,7=fixed16 (16.16),Offset (in bytes) into memory block.]
Reads data from a memory block.
Output: Returns the number of actual bytes read

[MemReadString,Mem block identifier.,The string variable.,Offset (in bytes) into memory block.,Break at line end? (default=no),Skip white space? (default=no),Max read length 1 - 255(default).]
Reads a string from a memory block.
Output: Returns the number of bytes scanned. (may be larger than the actual bytes read)

[MemResize,Mem block identifier.,New size.,Optional byte value to fill the newly added memory? (omited=no)]
Resizes an exsiting memory block.
Output: Returns the new size of the memory block. Zero indicates an error.

[MemSaveToFile,Mem block identifier.,File name including the extension (such as brush1.ztl ).,Overwrite if exists? Set to nonzero value to save the file even if an identically named file already exists on disk. Default=Do not overwrite.]
Saves an exisiting memory block to a disk file.
Output: Returns the size of the new memory block or error code...0=Error -1=Memory does not exists -2=File already exits -3=File write error.

[MemWrite,Mem block identifier.,Value to write.,Data format (0=omited=float, 1=signed char,2=unsigned char,3=signed short,4=unsigned short,5=signed long,6=unsigned long,7=fixed16 (16.16),Offset (in bytes) into memory block.]
Write data to a memory block.
Output: Returns the number of actual bytes written

[MemWriteString,Mem block identifier.,The string .,Offset (in bytes) into memory block.,Write terminating zero char (if omited=yes)]
Writes a string into a memory block.
Output: Returns the number of bytes written. (including the terminating zero)

[MergeUndo]
Merge the next undo with the previous undo.

[Mesh3DGet,Property: 0=PointsCount,1=FacesCount,2=XYZ bounds,3=UVBounds,4=1stUVTile,5=NxtUVTile,6=PolysInUVTile,7=3DAreaOfUVTile,8=Full3DMeshArea,Optional input 1 Vertix/Face/Group/UVTile H index (0 based),Optional input 2,Optional output variable1.,Optional output variable2.,Optional output variable3.,Optional output variable4.,Optional output variable5.,Optional output variable6.,Optional output variable7.,Optional output variable8.]
Gets information about the currently active  Mesh3D tool.
Output: Returns zero if command executed successfully, any other value indicates and error.

[MessageOK,The Message that will be shown,The Title of the message]
Displays a user message with a single OK button

[MessageOKCancel,The Message that will be shown,The Title of the message]
Displays a user message with CANCEL and OK buttons
Output: Returns the button that the user clicked. (0=CANCEL, 1=OK)

[MessageYesNo,The Message that will be shown,The Title of the message]
Displays a user message with YES and NO buttons
Output: Returns the button that the user clicked. (0=NO, 1=YES)

[MessageYesNoCancel,The Message that will be shown,The Title of the message]
Displays a user message with YES, NO and CANCEL buttons
Output: Returns the button that the user clicked. (0=NO, 1=YES CANCEL=-1)

[MouseHPos,Global coordinates? set value to non-zero for global coordinates, default=Canvas coordinates.]
Returns the current H position of the mouse in Canvas or Global coordinates.
Output: The H position of the mouse

[MouseLButton]
Returns the current state of the left mouse button 
Output: Returns 1 if mouse button is pressed, returns zero if unpressed

[MouseVPos,Global coordinates? set value to non-zero for global coordinates, default=Canvas coordinates.]
Returns the current V position of the mouse in Canvas or Global coordinates.
Output: The V position of the mouse

[MTransformGet,Mem block identifier.,Optional variable index (default=0).]
Gets current transformation values into an existing memory block

[MTransformSet,Mem block identifier.,Optional variable index (default=0).]
Sets new transformation values from an existing memory block.

[MVarDef,Mem block identifier.,Mem block variables count.,Initial fill? (omited=noFill=faster to create)]
Defines a new variables memory block.
Output: Returns the variables count of the new memory block or error code...0=Error -1=Memory already exists -2=Can't create memory block.

[MVarGet,Mem block identifier.,Variable index (0 based).]
Reads a float value from a memory block.
Output: Returns the float value.

[MVarSet,Mem block identifier.,Variable index (0 based).,The value to write.]
Writes a float value to a memory block.
Output: Returns the old value of the variable.

[NormalMapCreate,Image Width,Image Height,Smooth (default=yes),SubPoly (default=0),Border (default=8),UVTile index (default=ignores UV tiles),Local(tangent) coordinates? (default=world coordinates)]
Creates NormalMap
Output: Returns zero if executed successfully. Any other value indicates an error

[Note,Text line,Optional path1 of an interface item to be pointed out. (default=none),Display Duration (in seconds). (zero= wait for user action, -1=combine with next note command). (default=wait action),Popup background color. (  0x000000<->0xffffff, default=0x606060, 0=NoBackground ),Prefered distance of the note from the specified interface item (default=48),Prefered Note width (in pixels, default=400),optional marked windows fill color. ( 0x000000<->0xffffff  or blue + (green*256) + (red*65536) ) (Omitted value=No fill)  ),Frame horizontal size ( 1= (default) Max width ),Frame vertical size ( 1=(default) Max height ),Frame left side ( 0=left (default) , .5=center, 1=right ). Omit value for horizontal autocentering.,Frame top side ( 0=top (default) , .5=center, 1=bottom ) Omit value for vertical auto-centering.,Optional icon file name.]
Displays a note to the user.
Output: If the note has UI buttons then the return value of the pressed buttons (1=1st button, 2=2nd button ...), otherwise the return value will be zero.

[NoteBar,The Message that will be shown (use empty string to clear current note),Optional progress-bar value (0=Min, 1=Max)]
Displays a note in progress bar.

[NoteIButton,Button text,Optional button icon,Initially Pressed ?  (default=unpressed),Initially Disabled ? (default=enabled),Optional button H relative position. (Positive value=offset from left, Negative value=offset from right, 0=automatic),Optional button V relative position. (Positive value=offset from top, Negative value=offset from bottom, 0=automatic),Optional button width in pixels (default=automatic),Optional button height in pixels (default=automatic),Optional button color  0x000000<->0xffffff (blue + (green*256) + (red*65536) ) ,Optional text color  0x000000<->0xffffff  (blue + (green*256) + (red*65536) ) ,Optional background opacity (default=1) ,Optional text opacity (default=1) ,Optional image opacity (default=1) ]
Defines a button to be included within the next Note to be shown.

[NoteIGet,Note-button index (1=1st) or its name]
Returns the value of am NoteIButton which was shown in the last displayed Note.
Output: The item value

[NoteISwitch,Button text,Optional button icon,Initially Pressed ?  (default=unpressed),Initially Disabled ? (default=enabled),Optional button H relative position. (Positive value=offset from left, Negative value=offset from right, 0=automatic),Optional button V relative position. (Positive value=offset from top, Negative value=offset from bottom, 0=automatic),Optional button width in pixels (default=automatic),Optional button height in pixels (default=automatic),Optional button color  0x000000<->0xffffff (blue + (green*256) + (red*65536) ) ,Optional text color  0x000000<->0xffffff  (blue + (green*256) + (red*65536) ) ,Optional background opacity (default=1) ,Optional text opacity (default=1) ,Optional image opacity (default=1) ]
Define a switch-button to be included within the next Note to be shown.

[PageSetWidth,Preferred PageWidth]
Sets the width of the page

[PaintBackground,Red,Green,Blue]
Paints the background using the current background color

[PaintBackSliver,height,Red,Green,Blue]
Draws a full page-width rectangle using the current background color

[PaintPageBreak]
Draws a visual page-break

[PaintRect,Width,height,Red,Green,Blue]
Draws a rectangle (in the ZScript window) using the current pen color

[PaintTextRect,Width,Height,Text]
Draws a rectangle with imbedded text

[PD]
Moves the pen position to the beginning of the next line (Same as PenMoveDown)

[PenMoveCenter]
Moves the pen position to the horizontal center of the page

[PenMoveDown]
Moves the pen position to the beginning of the next line

[PenMoveLeft]
Moves the pen position to the left side of the page

[PenMoveRight]
Moves the pen position to the right side of the page

[PenMove,Horizontal Offset,Vertical Offset]
Moves the pen a relative distance

[PenSetColor,Red,Green,Blue]
Sets the pen main color

[PixolPick,Component Index. 0=CompositeColor ( 0x000000<->0xffffff  or red*65536+green*256+blue) 1=Z(-32576 to 32576) 2=Red(0 to 255 ) 3=Green(0 to 255 ) 4=Blue(0 to 255 )  5=MaterialIndex(0 to 255 ) 6=XNormal(-1 to 1) 7=YNormal(-1 to 1) 8=ZNormal(-1 to 0) ,H Position,V Position]
Retrieves information about a specified Pixol
Output: The value of the specified Pixol

[PropertySet,The base command name (Title,SubTitle,Caption),Property Index,The new Value]
Modifies the setting of Title, SubTitle and Caption text

[Randomize,Optional sid value (0 to 32767)]
Resets the Rand generator.

[RGB,Red,Green,Blue]
Combines 3 color-components into one RGB value
Output: Combined RGB

[RoutineCall,Name of the routine to be called,Input Var01,Input Var02,Input Var03,Input Var04,Input Var05,Input Var06,Input Var07,Input Var08,Input Var09,Input Var10]
Executes the specified defined routine

[RoutineDef,Name of the routine,Commands group that will be executed when the routine is called,Input Var01,Input Var02,Input Var03,Input Var04,Input Var05,Input Var06,Input Var07,Input Var08,Input Var09,Input Var10]
Defines a named commands group

[SectionBegin,Section Title,Initial state (1=Expanded,0=Collapsed ),Popup Info Text,Commands group to execute when expanding to reveal content,Commands group to execute when collapsing to hide content,Initially Disabled? (0=Enabled(ByDefault) NonZero=Disabled)]
Begins a collapsible section

[SectionEnd]
Ends a collapsible section

[ShellExecute,The shell command]
Execute a shell command

[Sleep,Sleep amount in seconds.,Commands group to execute when awaken.,Optional event (default=1) (1=Timer,2=Mouse Moved,4=LButton down,8=LButton up,16=KeyDown,32=keyUp,64=ModifierKeyDown,128=ModifierKeyUp,256=Startup,512=Shut down,1024 InterfaceItem pressed/unpressed,2048 tool selected,4096 texture selected, 8192 alpha sele,Optional output variable which will contain the event code that has awaken the ZScript,Optional output variable which will contain the ID of the window pointed by the mouse.]
Exists ZScript and be awaken by specified event.

[SleepAgain,Optional new Sleep amount in seconds (default=unchanged),Optional event (default=unchanged) (1=Timer,2=Mouse Moved,4=LButton down,8=LButton up,16=KeyDown,32=keyUp,64=ModifierKeyDown,256=Startup,512=Shut down,1024 InterfaceItem post pressed/unpressed,2048 tool selected,4096 texture selected, 8192 alpha selected,]
Exists ZScript and continues the Sleep command.

[SoundPlay,Mem block identifier.,Oprional play mode. 0=default=Play once, dont wait for completion. 1=Play once, wait for completion. 2=Play loop, dont wait for completion.]
Plays the sounds loaded into a specified memory block.
Output: Returns the zero if command executed successfully.

[SoundStop,Mem block identifier.]
Stops the currently specified sound.
Output: Returns the zero if command executed successfully.

[StrAsk,Optional initial string,Optional title]
Asks user to input a string.
Output: Returns the text typed by user or an empty string if canceled.

[StrExtract,Input string,Start character index (0=left),End character index (0=left)]
Returns specified portion of the input string
Output: The extracted portion of the input string.

[StrFind,find this string,in this string,Optional start search index (default=0)]
Locate a string within a string.
Output: Returns the starting index of the 1st string within the 2nd string. returns -1 if not found.

[StrFromAsc,Input Ascii value]
Returns the character of the specified Ascii value.
Output: The character of the specified Ascii value.

[StrLength,String to evaluate]
Returns the number of characters in the input string.
Output: Number of characters in the input string.

[StrLower,Input string]
Returns the lowercase version of the input string.
Output: The lowercase version of the input string.

[StrMerge,Str 1,Str 2,Optional Str 3,Opt Str 4,Opt Str 5,Opt Str 6,Opt Str 7,Opt Str 8,Opt Str 9,Opt Str 10,Opt Str 11,Opt Str 12]
Combines two (or more) strings into one string.
Output: The combined string. Note: result string will not exceed 255 characters in length 

[StrokeGetInfo,Stroke-type Variable,Info number,Point index (0 based)]
Retrieves the information from a specified Stroke-type Variable
Output: StrokeInfo result

[StrokeGetLast]
Retrieves the last drawn brush stroke
Output: StrokeData

[StrokeLoad,FileName (.txt)]
Loads a brush-stroke text file
Output: StrokeData

[StrokesLoad,FileName (.txt)]
Loads a brush-strokes text file
Output: StrokesData

[StrToAsc,Input string,Optional character offset (default=0)]
Returns the Ascii value of a character.
Output: The Ascii value of a character.

[StrUpper,Input string]
Returns the uppercase version of the input string.
Output: The uppercase version of the input string.

[SubTitle,Text]
Displays a text line using the current SubTitle settings

[SubToolGetActiveIndex]
Returns the index of the active subtool
Output: Returns the index of the active subtool (zero based).

[SubToolGetCount]
Returns the number of subtools in the active tool
Output: Returns the number of subtools.  Return 0 if error.

[SubToolGetFolderIndex,Subtool Index (zero based).  If omited then use the currently selected subtool.]
Returns the folder index in which this subtool is contained
Output: Returns the foldr index or -1 if this subtool is not within a folder.

[SubToolGetFolderName,Tool Index (zero based). If omited then use the currently selected tool.]
Returns the ffolder name of the specified subtool
Output: Result folder name or empty if subtool is not in a folder.

[SubToolGetID,Subtool Index (zero based).  If omited then use the currently selected subtool.]
Returns the unique subtool ID
Output: Returns the unique subtool ID or zero if error.

[SubToolGetStatus,Subtool Index (zero based).  If omited then use the currently selected subtool.]
Returns the status of a subtool
Output: Returns the status (Subtool Eye=0x01, Folder Eye=0x02,UnionAdd=0x10,UnionSub=0x20,UnionClip=0x40,UnionStart=0x80,ClosedFolder=0x400,OpenedFolder=0x800) .

[SubToolLocate,Unique Subtool ID]
Locates a subtool by the specified unique ID
Output: Returns the index of the located subtool or -1 if error.

[SubToolSelect,Subtool Index (zero based).]
Selects the specified subtool index
Output: Returns zero if OK, -1 if error.

[SubToolSetStatus,Subtool Index (zero based).  If omited then use the currently selected subtool.,New Value (Subtool Eye=0x01,Folder Eye=0x02,UnionAdd=0x10,UnionSub=0x20,UnionClip=0x40,UnionStart=0x80,ClosedFolder=0x400,OpenedFolder=0x800)]
Sets the status of a subtool

[SystemInfo]
Returns System Info (CPU+MEM).
Output: Result string

[TextCalcWidth,The text to be evaluated]
Calculates the pixel-width of the specified string
Output: Width of text in pixels

[Title,Text]
Displays a text line using the current Title settings

[TLDeleteKeyFrame,Key Frame Index]
Delete specified key frame index of the active track
Output: Returns the number of available key frames

[TLGetActiveTrackIndex]
Returns the index of the active track
Output: Returns the current active track index -1=None 

[TLGetKeyFramesCount]
Returns the total number of key frames in the active track
Output: Returns the number of key frames in the active track 0=None 

[TLGetKeyFrameTime,Key Frame Index]
Get the time of the specified key frame index of the active track
Output: Returns the time of the selected key frame or -1 if error.

[TLGetTime]
Returns the current TimeLine knob position in  0.0 to 1.0 range
Output: Returns the current TimeLine knob time 0=start, 1=end

[TLGotoKeyFrameTime,Key Frame Index]
Move TimeLine knob position to specified key frame index of the active track
Output: Returns the time of the selected key frame or -1 if error.

[TLGotoTime,Time 0.0 to 1.0 range.]
Sets the current TimeLine knob position in  0.0 to 1.0 range
Output: Returns zero if OK, -1 if error.

[TLNewKeyFrame,Optional time (if omited then use current time)]
Create a new key frame in the active track
Output: Returns the new key frame index or -1 if error.

[TLSetActiveTrackIndex,Track Index 0=main track]
Sets the active track index
Output: Returns zero if OK, -1 if error.

[TLSetKeyFrameTime,Key Frame Index,Time 0.0 to 1.0 range.]
Set the time of the specified key frame index of the active track
Output: Returns the new key frame index or -1 if error.

[ToolGetActiveIndex]
Returns the index of the active tool
Output: Returns the index of the active tool (zero based).

[ToolGetCount]
Returns the number of available tools
Output:  Returns the number of available tools.

[ToolGetPath,Tool Index (zero based). If omited then use the currently selected tool.]
Returns the file path or name of the specified tool
Output: Result path (without the .ztl). Empty if error.

[ToolGetSubToolID,Tool Index (zero based).  If omited then use the currently selected tool.,Subtool Index (zero based).  If omited then use the selected subtool.]
Returns the unique subtool ID
Output: Returns the unique subtool ID or zero if error.

[ToolGetSubToolsCount,Tool Index (zero based). If omited then use the currently selected tool.]
Returns the number of subtools in the specified tool index
Output: Returns the number of subtools.  Return 0 if error.

[ToolLocateSubTool,Unique Subtool ID,Optional subtool index result]
Locates a subtool by the specified unique ID
Output: Returns the index of the located tool and subtool or -1 if error.

[ToolSelect,Tool Index (zero based).]
Selects the specified tool index
Output: Returns zero if OK, -1 if error.

[ToolSetPath,Tool Index (zero based). If omited then use the currently selected tool.,New Path. Path extension (such as .ztl) will be omited.]
Sets the file path or name of the specified tool
Output: Returns zero if OK, -1 if error.

[TransformGet,xPos,yPos,zPos,xScale,yScale,zScale,xRotate,yRotate,zRotate]
Gets current transformation values.

[TransformSet,xPos,yPos,zPos,xScale,yScale,zScale,xRotate,yRotate,zRotate]
Sets new transformation values.

[TransposeGet,Start xPos,Start yPos,Start zPos,End xPos,End yPos,End zPos,Action Line Length,x of red axis,y of red axis,z of red axis,x of green axis,y of green axis,z of green axis,x of blue axis,y of blue axis,z of blue axis]
Gets current Transpose Action Line values.

[TransposeIsShown]
Returns status of transpose line
Output: Returns 1 if shown, zero if not.

[TransposeSet,Start xPos,Start yPos,Start zPos,End xPos,End yPos,End zPos,Action Line Length,x of red axis,y of red axis,z of red axis,x of green axis,y of green axis,z of green axis,x of blue axis,y of blue axis,z of blue axis]
Sets current Transpose Action Line values.

[Val,Variable name]
Evaluates the input and returns a numerical value
Output: Value of the named variable

[VarAdd,Variable name,Value To Add]
Adds a value to an existing variable

[VarDec,Variable name]
Subtracts 1 from the value of an existing variable

[VarDef,Variable name,Variable defaultValue]
Defines a variable

[VarDiv,Variable name,Value to Divide By]
Divides an existing variable by a value

[VarInc,Variable name]
Adds 1 to the value of an existing variable

[VarListCopy,Destination list,Destination initial index,Source list,Source initial index,Number of items to copy. (if omitted or it is 0, then all items will be copied)]
Copies items from a source list to a destination list

[VarLoad,Variable name,FileName,Verify only (1=Only Verify that a proper saved variable file exists, 0=(default)Verifies and loads values]
Loads variable/s from a file
Output: Number of loaded or verfied values

[VarMul,Variable name,Value to Multiply]
Multiplies an existing variable by a value

[VarSave,Variable name,FileName]
Saves variable value/s to file
Output: Number of saved values

[VarSet,Variable name,New Value]
Sets the value of a named variable

[VarSize,Variable name]
Returns the number of items in a variable or in a list
Output: The number of items in a list or 1 if it is a simple variable

[VarSub,Variable name,Value To Subtract]
Subtracts a value from an existing variable

[Var,Variable name]
Gets the value of a named variable
Output: Value of the named variable

[ZBrushInfo,The info type. 0=version number, 1=Demo/Beta/Full, 2=Runtime seconds, 3=Mem use,4=VMem Use,5=Free Mem,6=operating system (0=PC,1=Mac,2=MacOSX),7=Unique session ID,8=Total RAM,9=year,10=mounth,11=day,12=hour,13=minutes,14=seconds,15=Day Of The week,16=cpu ]
Returns ZBrush info.
Output: Result value

[ZBrushPriorityGet]
Returns the task-priority of ZBrush.
Output: The current task-priority

[ZBrushPrioritySet,The priority. -2=Low, -1=BelowNormal, 0=normal, 1=Above Normal, 2=High]
Sets the task-priority of ZBrush.

[ZSphereAdd,xPos,yPos,zPos,Radius,Parent index (0 based),Optional Color   0x000000<->0xffffff  (RED*65536)+(GREEN*256)+BLUE,Optional Mask (0=unmasked to 255=fully masked),Optional TimeStamp,Optional Flags (0=default, 1=invisible link to parent)]
Adds new ZSphere to the currently active ZSpheres tool
Output: Returns the the index of the new ZSphere or -1 if command failed.

[ZSphereDel,ZSphere index.  (Sphere 0 can't be deleted)]
Deletes a ZSphere from the currently active ZSpheres tool
Output: Returns zero if command executed successfully.

[ZSphereEdit,ZSpheres editing commands,Store undo? (0=Skip Undo, 1=Store undo)]
Prepares the currently active ZSpheres tool for ZScript editing session.
Output: Returns the zero if command executed successfully.

[ZSphereGet,Property: 0=ZSpheres count,1=xPos,2=yPos,3=zPos,4=radius,5=color,6=mask,7=ParentIndex(-1=none),8=LastClickedIndex(-1=none),9=TimeStamp;10=ChildsCount,11=ChildIndex (2nd index),12=TimeStampCount,13=TimeStampIndex,14=flags,15=Twist Angle,16=Membrane,17=X Re,Optional ZSphere index (0 based),Optional 2nd index (0 based)]
Gets information about the currently active ZSpheres tool. (Must be placed within ZSphereEdit command)
Output: Returns the value of the specified property

[ZSphereSet,Property: 0=unused, 1=xPos,2=yPos,3=zPos,4=radius,5=color,6=mask,7=ParentIndex,8=unused,9=TimeStamp,10=unused,11=unused,12=unused,13=unused,14=flags,15=Twist Angle,16=Membrane,17=X Res,18=Y Res,19=Z Res,20=XYZ Res,21=UserValue,ZSphere index (0 based),New property value]
Modifies a property of the currently active ZSpheres tool. (Must be placed within ZSphereEdit command)
Output: Returns zero if command executed successfully.

Math Functions:
SIN(angle)
COS(angle)
TAN(angle)
ASIN(value)
ACOS(value)
ATAN(value)
ATAN2(value,value)
LOG(value)
LOG10(value)
SQRT(value)
ABS(value)
RAND(value)
IRAND(value)
BOOL(value)
INT(value)
FRAC(value)
NEG(value)
MIN(value1,value2)
MAX(value1,value2)
